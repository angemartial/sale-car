<?php

namespace AppBundle\Repository;
use AppBundle\Extra\VehicleSearch;
use Doctrine\ORM\Tools\Pagination\Paginator;


/**
 * VehicleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VehicleRepository extends \Doctrine\ORM\EntityRepository
{


    /**
     * @param $max
     * @param int $page
     * @return paginator
     */
    public function loadVehiculeAction($max, int $page = 1 ){
        $qb = $this->createQueryBuilder('p');

        $qb->setFirstResult($page - 1 * $max)
            ->orderBy('p.id', 'DESC')
            ->where('p.publised = :published')
            ->setParameter('published', true)
            ->setMaxResults($max);

        return new Paginator($qb);
    }

    public function search(VehicleSearch $search){
        $qb = $this->createQueryBuilder('p');

        if(null !== $search->getBrand()){
            $qb->andWhere('p.brand = :brand')
                ->setParameter('brand', $search->getBrand());
        }

        $model =  $search->getModel();
        if($model){
            $qb->andWhere('p.model = :model')
                ->setParameter('model', $search->getModel());
        }

        $state = $search->getState();
        if($state){
            $qb->andWhere('p.state = :state')
                ->setParameter('state', $search->getState());
        }

        $minYear = $search->getMinYear();
        if($minYear){
            $qb->andWhere('p.minYear = :minYear')
                ->setParameter('minYear', $search->getMinYear());
        }
        $maxYear = $search->getMaxYear();
        if($maxYear){
            $qb->andWhere('p.maxYear = :maxYear')
                ->setParameter('maxYear', $search->getMaxYear());
        }

        $minYear = $search->getMinYear();
        if($minYear){
            $qb->andWhere('p.minYear = :minYear')
                ->setParameter('minYear', $search->getMinYear());
        }

        return new Paginator($qb);
    }
}
